images:
  macOS
  macOS-Mojave

environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python

    #- PYTHON: "C:\\Python27\\python.exe"
    #- PYTHON: "C:\\Python27-x64\\python.exe"
    #- PYTHON: "C:\\Python35\\python.exe"
    #- PYTHON: "C:\\Python35-x64\\python.exe"
    #- PYTHON: "C:\\Python36\\python.exe"
    #- PYTHON: "C:\\Python36-x64\\python.exe"
    #- PYTHON: "C:\\Python37\\python.exe"
    #- PYTHON: "C:\\Python37-x64\\python.exe"
    #- PYTHON: "C:\\Python38\\python.exe"
    #- PYTHON: "C:\\Python38-x64\\python.exe"
    PYTHON: "python3.8"

install:
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  # These Python packages are needed to build FXrays
  - "%PYTHON% -m pip install --upgrade pip setuptools"
  - "%PYTHON% -m pip install Cython wheel"
  - "%PYTHON% setup.py build"
  
build: none
  
test_script:
  - "%PYTHON% -m setup.py test"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "%PYTHON% setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*.whl

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
